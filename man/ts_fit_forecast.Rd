% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecast.R
\name{ts_fit_forecast}
\alias{ts_fit_forecast}
\title{Fit and forecast with time-series approaches.}
\usage{
ts_fit_forecast(
  prepped_tsibble,
  outcome = "flu.admits",
  horizon = 4L,
  trim_date = "2021-01-01",
  models = list(arima = "PDQ(0, 0, 0) + pdq(1:2, 0:2, 0)", ets =
    "season(method=c(\\"N\\",\\"A\\",\\"M\\"), period=\\"3 months\\")", nnetar =
    "AR(P=1)"),
  covariates = c("hosp_rank", "ili_rank"),
  ensemble = TRUE,
  ...
)
}
\arguments{
\item{prepped_tsibble}{A tsibble with data retrieved from \link{get_hdgov_hosp}, prepped by \link{prep_hdgov_hosp}, and made into a tsibble with \link{make_tsibble}.}

\item{outcome}{The outcome variable to model (default \code{"flu.admits"}).}

\item{horizon}{Number of weeks ahead}

\item{trim_date}{The date (YYYY-MM-DD) at which point ts modeling should be started. Default \code{"2021-01-01"}. Set to \code{NULL} to stop trimming.}

\item{models}{FIXME}

\item{covariates}{Covariates that should be modeled with the time series. Defaults to \code{c("hosp_rank", "ili_rank")}, from the historical data brought in with \link{prep_hdgov_hosp}.}

\item{ensemble}{Should ARIMA and ETS models be ensembled? Default \code{TRUE}.}

\item{...}{FIXME}
}
\value{
A list of the time series fit, time series forecast, and model formulas.
\itemize{
\item \code{tsfit}: A \code{mdl_df} class "mable" with one row for each location, columns for arima and ets models.
\item \code{tsfor}: A \code{fbl_ts} class "fable" with one row per location-model-timepoint up to \code{horizon} number of time points.
\item \code{arima_formula}: A formula object: the ARIMA model formula used.
\item \code{ets_formula}: A formula object: the nonseasonal exponential smoothing model formula used.
\item \code{nnetar_formula}: A formula object: autoregressive feedforward neural network model formula used.
}
}
\description{
Fit and forecast with time-series approaches.
}
\examples{
\dontrun{
h_raw <- get_hdgov_hosp(limitcols=TRUE)
## save(h_raw, file="~/Downloads/h_raw.rd")
## load(file="~/Downloads/h_raw.rd")
prepped_hosp <- prep_hdgov_hosp(h_raw)
prepped_tsibble <- make_tsibble(prepped_hosp,
                                     epiyear = epiyear,
                                     epiweek=epiweek,
                                     key=location)
prepped_tsibble <-
  prepped_tsibble \%>\%
  dplyr::filter(location \%in\% c("US", "51"))
hosp_fitfor <- ts_fit_forecast(prepped_tsibble,
                               horizon=4L,
                               outcome="flu.admits",
                               stepwise=FALSE,
                               approximation=FALSE)
hosp_fitfor <- ts_fit_forecast(prepped_tsibble,
                               horizon=4L,
                               outcome="flu.admits",
                               models=list(arima='PDQ(0, 0, 0) + pdq(1:2, 0:2, 0)',
                                           ets='season(method=c("N","A","M"), period="3 months")'),
                               stepwise=FALSE,
                               approximation=FALSE)
}
}
